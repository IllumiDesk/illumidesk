name: Tests

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "**/test-docs.yaml"
  push:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "**/test-docs.yaml"
  workflow_dispatch:

jobs:
  # Run tests
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      # Keep running even if one job fails
      fail-fast: false
      matrix:
        python:
          - "3.8"
          - "3.9"

    steps:
      - name: Clone Main Repo
        uses: actions/checkout@v2
        with:
          path: main

      - name: Install Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Update
        run: sudo apt update

      - name: Add rabbitmq repository
        run: curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | sudo bash

      - name: Install rabbitmq-server
        run: sudo apt-get install rabbitmq-server

      - name: Disable rabbitmq-server
        run: sudo systemctl disable rabbitmq-server

      # preserve pip cache to speed up installation
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install
        run: make -C main dev

      - name: Run tests
        shell: 'script --return --quiet --command "bash {0}"'
        run: make -C main test

      - name: Create coverage report
        run: make -C main test-create-cov
      
      - name: Upload coverage report
        run: make -C main test-push-cov
